<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${package}.dao.${className}Dao">
    <resultMap id="BaseResultMap" type="${package}.model.${className}DO">
        #foreach($column in $columns)
            #if($column.columnName == $pk.columnName)
                <id column="${classname}_$pk.columnName" property="${pk.attrname}" jdbcType="$column.dataTypeCapital"/>
            #else
                <result column="${classname}_$column.columnName" property="$column.attrname"
                        jdbcType="$column.dataTypeCapital"/>
            #end
        #end
    </resultMap>

    <sql id="Base_Column_List">
        #foreach($column in $columns)${classname}.`$column.columnName`  ${classname}_$column.columnName #if($velocityCount != $columns.size()),#end#end
    </sql>
    <select id="getById" resultType="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ${tableName} ${classname}
        where ${pk.columnName} = #{value}
    </select>

    <select id="listByMap" resultType="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from ${tableName} ${classname}
        <include refid="queryCondition"/>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${classname}.${sort} ${order}
            </when>
            <otherwise>
                order by ${classname}.${pk.columnName} desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*) from ${tableName} ${classname}
        <include refid="queryCondition"/>
    </select>

    <sql id="queryCondition">
        <where>
            #foreach($column in $columns)
                #if("varchar" == $column.dataType)
                    <if test="$column.attrname != null and $column.attrname.trim() != ''">
                #else
                <if test="$column.attrname != null">
                #end
                and ${classname}.$column.columnName = #{$column.attrname}
            </if>
            #end
        </where>
    </sql>
    <insert id="insert" parameterType="${package}.model.${className}DO"#if($pk.extra == 'auto_increment')
            useGeneratedKeys="true" keyProperty="$pk.attrname"#end>
        insert into ${tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            #foreach($column in $columns)
                #if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
                    #if("varchar" == $column.dataType)
                        <if test="$column.attrname != null and $column.attrname.trim() != ''">
                    #else
                    <if test="$column.attrname != null">
                    #end
                    `$column.columnName`#if($velocityCount != $columns.size()), #end
                </if>
                #end
            #end
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #foreach($column in $columns)
                #if($column.columnName != $pk.columnName || $pk.extra != 'auto_increment')
                    #if("varchar" == $column.dataType)
                        <if test="$column.attrname != null and $column.attrname.trim() != ''">
                    #else
                    <if test="$column.attrname != null">
                    #end
                    #{$column.attrname}#if($velocityCount != $columns.size()), #end
                </if>
                #end
            #end
        </trim>
    </insert>

    <update id="update" parameterType="${package}.model.${className}DO">
        update ${tableName}
        <set>
            #foreach($column in $columns)
                #if($column.columnName != $pk.columnName)
                    #if("varchar" == $column.dataType)
                        <if test="$column.attrname != null and  $column.attrname.trim() != ''">
                    #else
                    <if test="$column.attrname != null">
                    #end
                    `$column.columnName` = #{$column.attrname }#if($velocityCount != $columns.size()),
                #end
                </if>
                #end
            #end
        </set>
        where ${pk.columnName} = #{${pk.attrname}}
    </update>

    <delete id="batchRemove">
        delete from ${tableName} where ${pk.columnName} in
        <foreach item="${pk.attrname}" collection="array" open="(" separator="," close=")">
            #{${pk.attrname}}
        </foreach>
    </delete>

</mapper>