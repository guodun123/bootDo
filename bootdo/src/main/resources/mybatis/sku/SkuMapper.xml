<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bootdo.sku.dao.SkuDao">
    <resultMap id="BaseResultMap" type="com.bootdo.sku.model.SkuDO">

        <id column="sku_id" property="id" jdbcType="INTEGER"/>
        <result column="sku_name" property="name" jdbcType="VARCHAR"/>
        <result column="sku_code" property="code" jdbcType="VARCHAR"/>
        <result column="sku_ean13" property="ean13" jdbcType="VARCHAR"/>
        <result column="sku_create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        sku.id sku_id,sku.name sku_name,sku.code sku_code,sku.ean13 sku_ean13,sku.create_time sku_create_time
    </sql>
    <select id="getById" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from md_sku sku
        where id = #{value}
    </select>

    <select id="listByMap" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from md_sku sku
        <include refid="queryCondition"/>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by sku.${sort} ${order}
            </when>
            <otherwise>
                order by sku.id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*) from md_sku sku
        <include refid="queryCondition"/>
    </select>

    <sql id="queryCondition">
        <where>
            <if test="id != null and id != ''">
                and sku.id = #{id}
            </if>
            <if test="name != null and name != ''">
                and sku.name = #{name}
            </if>
            <if test="code != null and code != ''">
                and sku.code = #{code}
            </if>
            <if test="ean13 != null and ean13 != ''">
                and sku.ean13 = #{ean13}
            </if>
            <if test="createTime != null and createTime != ''">
                and sku.create_time = #{createTime}
            </if>
        </where>
    </sql>
    <insert id="insert" parameterType="com.bootdo.sku.model.SkuDO" useGeneratedKeys="true" keyProperty="id">
        insert into md_sku
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">
                `name`,
            </if>
            <if test="code != null and code != ''">
                `code`,
            </if>
            <if test="ean13 != null and ean13 != ''">
                `ean13`,
            </if>
            <if test="createTime != null and createTime != ''">
                `create_time`
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null and name != ''">
                #{name},
            </if>
            <if test="code != null and code != ''">
                #{code},
            </if>
            <if test="ean13 != null and ean13 != ''">
                #{ean13},
            </if>
            <if test="createTime != null and createTime != ''">
                #{createTime}
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="com.bootdo.sku.model.SkuDO">
        update md_sku
        <set>
            <if test="name != null and  name != ''">
                `name` = #{name },
            </if>
            <if test="code != null and  code != ''">
                `code` = #{code },
            </if>
            <if test="ean13 != null and  ean13 != ''">
                `ean13` = #{ean13 },
            </if>
            <if test="createTime != null and  createTime != ''">
                `create_time` = #{createTime }
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="batchRemove">
        delete from md_sku where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>